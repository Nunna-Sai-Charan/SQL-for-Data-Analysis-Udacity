Questions: GROUP BY

Use the SQL environment below to assist with answering the following questions. Whether you get stuck or 
you just want to double check your solutions, my answers can be found at the top of the next concept.

One part that can be difficult to recognize is when it might be easiest to use an aggregate or one of the other 
SQL functionalities. Try some of the below to see if you can differentiate to find the easiest solution.

1. Which account (by name) placed the earliest order? Your solution should have the account name and the 
date of the order.

Query :

SELECT a.name AS account_name, o.occurred_at AS date
FROM orders o
JOIN accounts a
ON o.account_id = a.id
ORDER BY o.occurred_at
LIMIT 1;

2. Find the total sales in usd for each account. You should include two columns - the total sales for each 
company's orders in usd and the company name.

Query :

SELECT a.name AS company_name, SUM(o.total_amt_usd) AS total_sales_usd
FROM orders o
JOIN accounts a
ON a.id=o.account_id
GROUP BY company_name;

3. Via what channel did the most recent (latest) web_event occur, which account was associated with this 
web_event? Your query should return only three values - the date, channel, and account name.

Query :

SELECT w.occurred_at AS date, w.channel AS channel, a.name AS account_name
FROM web_events w
JOIN accounts a
ON w.account_id = a.id
ORDER BY date DESC
LIMIT 1;

4. Find the total number of times each type of channel from the web_events was used. Your final table should 
have two columns - the channel and the number of times the channel was used.

Query :

SELECT w.channel AS Channel, COUNT(w.channel) as total_count
FROM web_events w
GROUP BY Channel;

5. Who was the primary contact associated with the earliest web_event?

Query :

SELECT a.primary_poc
FROM accounts a
JOIN web_events w
ON w.account_id=a.id
ORDER BY w.occurred_at
LIMIT 1;

6. What was the smallest order placed by each account in terms of total usd. Provide only two columns - the 
account name and the total usd. Order from smallest dollar amounts to largest.

Query :

SELECT a.name AS account_name, MIN(o.total_amt_usd) AS min_amount
FROM orders o
JOIN accounts a
ON a.id=o.account_id
Group BY account_name
ORDER BY min_amount;

7. Find the number of sales reps in each region. Your final table should have two columns - the region and the 
number of sales_reps. Order from fewest reps to most reps.

Query :

SELECT r.name AS region_name, COUNT(*) AS no_of_sales_reps
FROM region r
JOIN sales_reps s
ON r.id=s.region_id
GROUP BY region_name
ORDER BY no_of_sales_reps;